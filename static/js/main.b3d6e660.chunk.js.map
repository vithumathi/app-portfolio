{"version":3,"sources":["components/Navbar/navbar.js","components/Header/Header.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","data-toggle","data-target","id","role","href","style","fontFamily","target","for","React","Component","Header","props","state","headerData","marginTop","marginBottom","color","this","name","tagLine","intro","App","profileData","header","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qhBAqEeA,G,yLAjEX,OACE,6BACE,yBAAKC,UAAU,uIACb,yBAAKA,UAAU,aACb,4BACEC,cAAY,WACZD,UAAU,iBACVE,cAAY,aAEZ,0BAAMF,UAAU,WAAhB,qBACA,0BAAMA,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BG,GAAG,YAC3C,wBAAIH,UAAU,0BACZ,wBAAIA,UAAU,WAAWI,KAAK,gBAC5B,uBACEJ,UAAU,WACVK,KAAK,IACLC,MAAO,CAAEC,WAAY,cAHvB,UAQF,wBAAIP,UAAU,WAAWI,KAAK,gBAC5B,uBACEJ,UAAU,WACVK,KAAK,IACLC,MAAO,CAAEC,WAAY,cAHvB,eAQF,wBAAIP,UAAU,WAAWI,KAAK,gBAC5B,uBACEJ,UAAU,WACVK,KAAK,IACLC,MAAO,CAAEC,WAAY,cAHvB,SAQF,wBAAIP,UAAU,WAAWI,KAAK,gBAC5B,uBACEJ,UAAU,uBACVK,KAAK,IACLC,MAAO,CAAEC,WAAY,cAHvB,aASJ,0BAAMP,UAAU,sBAAsBQ,OAAO,SAC3C,yBAAKR,UAAU,cACb,2BAAOS,IAAI,mBAGf,0BAAMT,UAAU,wB,GA1DTU,IAAMC,YCuDZC,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQD,EAAME,WAFF,E,qDAKjB,OACE,yBAAKf,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACb,wBACEM,MAAO,CACLU,UAAW,MACXC,aAAc,MACdV,WAAY,kBAJhB,UAOU,IACR,0BAAMD,MAAO,CAAEY,MAAO,mBACnBC,KAAKL,MAAMM,OAGhB,wBACEpB,UAAU,UACVM,MAAO,CACLU,UAAW,MACXC,aAAc,MACdC,MAAO,YAGRC,KAAKL,MAAMO,SAEd,uBACErB,UAAU,aACVM,MAAO,CACLW,aAAc,MACdV,WAAY,yBACZS,UAAW,SAGZG,KAAKL,MAAMQ,e,GA1CPZ,IAAMC,W,OCcZY,E,kDAbb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,WAAYS,EAAYC,QAFtB,E,qDAKjB,OACE,6BACE,kBAAC,EAAD,CAAQV,WAAYI,KAAKL,MAAMC,kB,GARrBL,IAAMC,WCOJe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b3d6e660.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark navbar-expand-lg text-center text-sm-center text-md-center text-lg-center text-xl-center navigation-clean-search\">\n          <div className=\"container\">\n            <button\n              data-toggle=\"collapse\"\n              className=\"navbar-toggler\"\n              data-target=\"#navcol-1\"\n            >\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n              <ul className=\"nav navbar-nav ml-auto\">\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"#\"\n                    style={{ fontFamily: \"Fira Code\" }}\n                  >\n                    About\n                  </a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"#\"\n                    style={{ fontFamily: \"Fira Code\" }}\n                  >\n                    Experience\n                  </a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"#\"\n                    style={{ fontFamily: \"Fira Code\" }}\n                  >\n                    Work\n                  </a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"nav-link text-center\"\n                    href=\"#\"\n                    style={{ fontFamily: \"Fira Code\" }}\n                  >\n                    Contact\n                  </a>\n                </li>\n              </ul>\n              <form className=\"form-inline mr-auto\" target=\"_self\">\n                <div className=\"form-group\">\n                  <label for=\"search-field\"></label>\n                </div>\n              </form>\n              <span className=\"navbar-text\"></span>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./header-dark.css\";\nimport \"./header.css\";\nimport Navbar from \"../Navbar/navbar\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.headerData;\n  }\n  render() {\n    return (\n      <div className=\"header-dark\">\n        <Navbar />\n        <div className=\"container hero\">\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2 mx-auto\">\n              <h1\n                style={{\n                  marginTop: \"0px\",\n                  marginBottom: \"0px\",\n                  fontFamily: \"Bitter, serif\",\n                }}\n              >\n                Hi, I'm{\" \"}\n                <span style={{ color: \"rgb(4,183,194)\" }}>\n                  {this.state.name}\n                </span>\n              </h1>\n              <h1\n                className=\"mx-auto\"\n                style={{\n                  marginTop: \"0px\",\n                  marginBottom: \"5px\",\n                  color: \"#ffffff\",\n                }}\n              >\n                {this.state.tagLine}\n              </h1>\n              <p\n                className=\"text-white\"\n                style={{\n                  marginBottom: \"5px\",\n                  fontFamily: \"'Fira Code', monospace\",\n                  marginTop: \"75px\",\n                }}\n              >\n                {this.state.intro}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport profileData from \"../../data/portfolioData.json\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { headerData: profileData.header };\n  }\n  render() {\n    return (\n      <div>\n        <Header headerData={this.state.headerData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}